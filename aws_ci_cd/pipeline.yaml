version: 0.2
batch:
  fast-fail: true
  build-graph:
    - identifier: build_amd64
      env:
        image: aws/codebuild/standard:7.0
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_SMALL
        variables:
          ARCH: amd64
      ignore-failure: false
    - identifier: build_arm64
      env:
        image: aws/codebuild/standard:7.0
        type: ARM_CONTAINER
        compute-type: BUILD_GENERAL1_SMALL
        variables:
          ARCH: arm64
      ignore-failure: false
    - identifier: create_manifest
      env:
        image: aws/codebuild/standard:7.0
        type: ARM_CONTAINER
        compute-type: BUILD_GENERAL1_SMALL
      depend-on:
        - build_amd64
        - build_arm64
      ignore-failure: false
phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
  build:
    commands:
      - echo "Building for $ARCH in $CODEBUILD_BATCH_BUILD_IDENTIFIER"
      - |
        if [ "$CODEBUILD_BATCH_BUILD_IDENTIFIER" = "create_manifest" ]; then
          docker manifest create $ECR_REPOSITORY:$IMAGE_TAG \
            --amend $ECR_REPOSITORY:$IMAGE_TAG-amd64 \
            --amend $ECR_REPOSITORY:$IMAGE_TAG-arm64
          docker manifest push $ECR_REPOSITORY:$IMAGE_TAG
        else
          docker build --build-arg ARCH=$ARCH -t $ECR_REPOSITORY:$IMAGE_TAG-$ARCH .
          docker push $ECR_REPOSITORY:$IMAGE_TAG-$ARCH
        fi
  post_build:
    commands:
      - echo "Build completed on `date`"