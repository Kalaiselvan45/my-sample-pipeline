AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to create a basic CodeBuild project for a CI/CD pipeline

Parameters:
  ApplicationName:
    Type: String
    Description: Name of the application (used to name resources)
    Default: MyCodeBuildApp
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubRepositoryOwner:
    Type: String
    Description: GitHub username of the repository owner
  GitHubRepository:
    Type: String
    Description: Name of the GitHub repository
  GitHubBranch:
    Type: String
    Description: Branch to monitor for changes
    Default: main
  GitHubOAuthTokenSecretName:
    Type: String
    Description: Name of the Secrets Manager secret containing the GitHub OAuth token

Resources:
  # S3 Bucket for CodeBuild artifacts
  ArtifactS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'codebuild-${ApplicationName}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ApplicationName}-CodeBuild-Role'
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${ApplicationName}-CodeBuild-Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ApplicationName}:*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                Resource: !Sub 'arn:aws:s3:::${ArtifactS3Bucket}/*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubOAuthTokenSecretName}-*'

  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ApplicationName}-Build'
      Description: !Sub 'Build project for ${ApplicationName}'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: S3
        Location: !Ref ArtifactS3Bucket
        Name: BuildOutput
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: NODE_ENV
            Type: PLAINTEXT
            Value: production
      Source:
        Type: GITHUB
        Location: !Sub 'https://github.com/${GitHubRepositoryOwner}/${GitHubRepository}'
        GitCloneDepth: 1
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - $CODEBUILD_SRC_DIR/aws_ci_cd/build.sh

      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub '${ApplicationName}-Build-Logs'
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480

Outputs:
  CodeBuildProjectName:
    Description: Name of the CodeBuild project
    Value: !Ref CodeBuildProject
  ArtifactBucketName:
    Description: Name of the S3 bucket for artifacts
    Value: !Ref ArtifactS3Bucket
  CodeBuildRoleArn:
    Description: ARN of the CodeBuild IAM role
    Value: !GetAtt CodeBuildRole.Arn